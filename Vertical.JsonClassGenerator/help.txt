json2csharp - Make C# classes from JSON

SYNOPSIS
    json2csharp <SOURCE> [OPTIONS]
    json2csharp help
    
DESCRIPTION
    This utility generates C# classes from sample JSON. It infers a schema using the values available in the JSON document. The JSON source can either be a file or the URL to a rest service. The generated code is written to stdout where it can be piped to a file or copied to the system clipboard.
    
SOURCE <file path|url>
    file
        The path to a file on the local device that contains the source JSON
        
    url
        The address of a REST resource that returns JSON source via an HTTP GET request
        
OPTIONS
    --collection-type <type>
        Specifies what type to use when representing sequences in the JSON document - can be one of the following: Array, List, ReadOnlyCollection, or ReadOnlyList
        
    -h, --header, --request-header <key=value>
        Adds the following key/value pair to the request header collection of the HTTPClient when SOURCE is a URL.    
        
    help
        Display the utility's help content
        
    --init-collections
        Initialize collection properties to an empty instance. Arrays and read-only collections are initialized to Array.Empty<T>(), while lists are initialized to new List<T>()
        
    --init-strings
        Initialize string properties to string.Empty
        
    --naming <strategy>
        Suggests how properties and types are named - can be Generic or Descriptive
        
    --ns, --namespace <name>
        The namespace to classify the output classes under; defaults to 'YourApplication' if not specified
        
    --null-references <strategy>
        Determines how nullable reference types are determined and annotated. Can be one of the following values:
            Never: Nullable annotations are not used
            Subjective: Nullable annotation are used when null or undetermined values in the source are encountered
            Comprehensive: All reference types are nullable regardless of document sample values
        
    --root <name>
        The name of the class generated by the root document; defaults to 'Root' if not specified
        
    --sample-values <count>
        Includes up to the given number of sample values in property documentation comments - defaults to 1. If zero is specified, no sample values are printed in the documentation.
        
    --spaces <count>
        Uses the specified number of spaces to perform indents in the output code
        
    --tabs
        Uses tabs to perform indents in the output code